services:
  web:
    image: python:3.9-slim
    container_name: simple_web
    ports:
      - "8080:8080"
    volumes:
      - ./app:/app
    command:
          - bash
          - -c
          - |
            pip install flask
            python /app/app.py
    networks:
          - kafka-minikube-network

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.6
    restart: always
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    volumes:
      - ./security/jaas/zookeeper_jaas.conf:/etc/kafka/jaas/zookeeper_jaas.conf
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

      ZOOKEEPER_AUTH_PROVIDER_SASL: org.apache.zookeeper.server.auth.SASLAuthenticationProvider
      ZOOKEEPER_ALLOW_SASL_FAILED_CLIENTS: false
      ZOOKEEPER_REQUIRE_CLIENT_AUTH_SCHEME: sasl

      KAFKA_OPTS: -Djava.security.auth.login.config=/etc/kafka/jaas/zookeeper_jaas.conf

  openldap:
    image: osixia/openldap:1.3.0
    hostname: openldap
    container_name: openldap
    ports:
      - 389:389
      - 636:636
    environment:
      LDAP_ORGANISATION: "Confluent"
      LDAP_DOMAIN: "confluent.io"
      LDAP_BASE_DN: "dc=confluent,dc=io"
      LDAP_TLS_CRT_FILENAME: server.crt
      LDAP_TLS_KEY_FILENAME: server.key
      LDAP_TLS_CA_CRT_FILENAME: ca.crt
      LDAP_TLS_VERIFY_CLIENT: "try"
    volumes:
      - ./security/ldap/users:/container/service/slapd/assets/config/bootstrap/ldif/custom
      - ./security/ldap/certs:/container/service/slapd/assets/certs
    command: "--copy-service --loglevel debug"

  broker:
    image: confluentinc/cp-server:7.5.6
    hostname: broker
    container_name: broker
    depends_on:
      - zookeeper
    ports:
      - "8091:8091"
      - "8092:8092"
      - "9092:9092"
      - "9093:9093"
      - "10091:10091"
      - "10000:10000"
      - "29092:29092"
    volumes:
      - ./security/jaas/kafka_server_jaas.conf:/etc/kafka/kafka_server_jaas.conf
      - ./security/conf:/tmp/conf
      - ./security/ldap/certs:/tmp/certs
      - ./security/ssl:/var/private/ssl
      - ./client-configs:/tmp/new-configs
      # - ./client_without_interceptors.config:/etc/kafka/secrets/client_without_interceptors.config
    environment:
      CONFLUENT_TELEMETRY_ENABLED: "false"
      KAFKA_CONFLUENT_TELEMETRY_ENABLED: "false"

      KAFKA_BROKER_ID: 1

      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

      # for 5.4.x:
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      # for 6.0.0
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:SASL_PLAINTEXT,TOKEN:SASL_PLAINTEXT,EXTERNAL:SSL,MDS_INTERNAL:PLAINTEXT
      KAFKA_LISTENERS: INTERNAL://:9092,TOKEN://:10091,EXTERNAL://:9093
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://broker:9092,TOKEN://broker:10091,EXTERNAL://localhost:9093,
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN, OAUTHBEARER
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL

      KAFKA_SSL_TRUSTSTORE_LOCATION: /var/private/ssl/kafka.broker.truststore.jks
      KAFKA_SSL_TRUSTSTORE_PASSWORD: confluent
      KAFKA_SSL_KEYSTORE_LOCATION: /var/private/ssl/kafka.broker.keystore.jks
      KAFKA_SSL_KEYSTORE_PASSWORD: confluent
      KAFKA_SSL_KEY_PASSWORD: confluent
      KAFKA_SSL_CLIENT_AUTH: required

      # TLS/SSL LISTENERS
      KAFKA_LISTENER_NAME_EXTERNAL_SSL_PRINCIPAL_MAPPING_RULES: 
        RULE:^CN=([a-zA-Z0-9.]*).*$/$1/L ,\
        DEFAULT
        #RULE:^CN=(.*?), OU=(.*?), O=(.*?), L=(.*?), ST=(.*?)$/$4/L
 
      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/kafka_server_jaas.conf"

      KAFKA_SUPER_USERS: User:admin;User:mds;User:superUser;User:ANONYMOUS

      KAFKA_LISTENER_NAME_INTERNAL_PLAIN_SASL_JAAS_CONFIG: |
        org.apache.kafka.common.security.plain.PlainLoginModule required \
        username="admin" \
        password="admin-secret" \
        user_admin="admin-secret" \
        user_mds="mds-secret" \
        user_superUser="superUser";

      KAFKA_ZOOKEEPER_SET_ACL: "true"

      # Configure TOKEN listener for Confluent Platform components and impersonation
      KAFKA_LISTENER_NAME_TOKEN_OAUTHBEARER_SASL_SERVER_CALLBACK_HANDLER_CLASS: io.confluent.kafka.server.plugins.auth.token.TokenBearerValidatorCallbackHandler
      KAFKA_LISTENER_NAME_TOKEN_OAUTHBEARER_SASL_LOGIN_CALLBACK_HANDLER_CLASS: io.confluent.kafka.server.plugins.auth.token.TokenBearerServerLoginCallbackHandler
      KAFKA_LISTENER_NAME_TOKEN_OAUTHBEARER_SASL_JAAS_CONFIG: |
        org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required \
        publicKeyPath="/tmp/conf/public.pem";

      # MDS
      KAFKA_CONFLUENT_METADATA_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_METADATA_SERVER_AUTHENTICATION_METHOD: BEARER
      KAFKA_CONFLUENT_METADATA_SERVER_LISTENERS: https://0.0.0.0:8091,http://0.0.0.0:8092
      KAFKA_CONFLUENT_METADATA_SERVER_ADVERTISED_LISTENERS: https://broker:8091,http://broker:8092
      # Allow conncetion to MDS over HTTPS
      KAFKA_CONFLUENT_METADATA_SERVER_SSL_KEYSTORE_LOCATION: /var/private/ssl/kafka.broker.keystore.jks
      KAFKA_CONFLUENT_METADATA_SERVER_SSL_KEYSTORE_PASSWORD: confluent
      KAFKA_CONFLUENT_METADATA_SERVER_SSL_KEY_PASSWORD:  confluent
      KAFKA_CONFLUENT_METADATA_SERVER_SSL_TRUSTSTORE_LOCATION: /var/private/ssl/kafka.broker.truststore.jks
      KAFKA_CONFLUENT_METADATA_SERVER_SSL_TRUSTSTORE_PASSWORD: confluent

      # Configure RBAC token server (authentication)
      KAFKA_CONFLUENT_METADATA_SERVER_TOKEN_AUTH_ENABLE: "true"
      KAFKA_CONFLUENT_METADATA_SERVER_TOKEN_MAX_LIFETIME_MS: 3600000
      KAFKA_CONFLUENT_METADATA_SERVER_TOKEN_SIGNATURE_ALGORITHM: RS256
      KAFKA_CONFLUENT_METADATA_SERVER_TOKEN_KEY_PATH: /tmp/conf/keypair.pem
      KAFKA_CONFLUENT_METADATA_SERVER_PUBLIC_KEY_PATH: /tmp/conf/public.pem

      # Configure Confluent Server Authorizer
      KAFKA_AUTHORIZER_CLASS_NAME: io.confluent.kafka.security.authorizer.ConfluentServerAuthorizer
      KAFKA_CONFLUENT_AUTHORIZER_ACCESS_RULE_PROVIDERS: CONFLUENT,ZK_ACL
      KAFKA_CONFLUENT_AUTHORIZER_GROUP_PROVIDER: RBAC

      # Configure MDS to talk to AD/LDAP
      KAFKA_LDAP_JAVA_NAMING_FACTORY_INITIAL: com.sun.jndi.ldap.LdapCtxFactory
      KAFKA_LDAP_COM_SUN_JNDI_LDAP_READ_TIMEOUT: 3000
      KAFKA_LDAP_JAVA_NAMING_PROVIDER_URL: ldaps://openldap:636
      KAFKA_LDAP_SSL_TRUSTSTORE_LOCATION: /tmp/certs/ldap_truststore.jks
      KAFKA_LDAP_SSL_TRUSTSTORE_PASSWORD: welcome123
      KAFKA_LDAP_JAVA_NAMING_SECURITY_PROTOCOL: SSL

      # Authenticate to LDAP
      KAFKA_LDAP_JAVA_NAMING_SECURITY_PRINCIPAL: cn=admin,dc=confluent,dc=io
      KAFKA_LDAP_JAVA_NAMING_SECURITY_CREDENTIALS: admin
      KAFKA_LDAP_JAVA_NAMING_SECURITY_AUTHENTICATION: simple
      
      # Locate LDAP users and groups
      KAFKA_LDAP_SEARCH_MODE: GROUPS
      KAFKA_LDAP_GROUP_SEARCH_BASE: ou=groups,dc=confluent,dc=io
      KAFKA_LDAP_GROUP_NAME_ATTRIBUTE: cn
      KAFKA_LDAP_GROUP_MEMBER_ATTRIBUTE: memberUid
      KAFKA_LDAP_GROUP_OBJECT_CLASS: posixGroup
      KAFKA_LDAP_GROUP_MEMBER_ATTRIBUTE_PATTERN: cn=(.*),ou=users,dc=confluent,dc=io
      KAFKA_LDAP_USER_SEARCH_BASE: ou=users,dc=confluent,dc=io
      KAFKA_LDAP_USER_NAME_ATTRIBUTE: uid
      KAFKA_LDAP_USER_OBJECT_CLASS: inetOrgPerson

      # Enable the swagger UI
      KAFKA_CONFLUENT_METADATA_SERVER_OPENAPI_ENABLE: true
      KAFKA_LOG4J_LOGGERS: "io.confluent.rest-utils=DEBUG,io.confluent.rbacapi=DEBUG,io.confluent.tokenapi=DEBUG,io.confluent.security.auth=DEBUG,io.confluent.security.store=DEBUG,io.confluent.common.security.jetty=DEBUG"
      # Loggers
      # KAFKA_LOG4J_LOGGERS: 'kafka.authorizer.logger=INFO,io.confluent.security.auth.provider.ldap.LdapGroupManager=TRACE'

      # TODO: Review every line below this. You have to understand the flow
      # EmbeddedKafkaRest: Kafka Client Configuration
      KAFKA_KAFKA_REST_BOOTSTRAP_SERVERS: SASL_PLAINTEXT://broker:10091
      KAFKA_KAFKA_REST_CLIENT_SECURITY_PROTOCOL: SASL_PLAINTEXT
      KAFKA_KAFKA_REST_CLIENT_SSL_TRUSTSTORE_LOCATION: /var/private/ssl/kafka.broker.truststore.jks
      KAFKA_KAFKA_REST_CLIENT_SSL_TRUSTSTORE_PASSWORD: confluent
      KAFKA_KAFKA_REST_CLIENT_SSL_KEYSTORE_LOCATION: /var/private/ssl/kafka.broker.keystore.jks
      KAFKA_KAFKA_REST_CLIENT_SSL_KEYSTORE_PASSWORD: confluent
      KAFKA_KAFKA_REST_CLIENT_SSL_KEY_PASSWORD: confluent
      # EmbeddedKafkaRest: HTTP Auth Configuration
      KAFKA_KAFKA_REST_KAFKA_REST_RESOURCE_EXTENSION_CLASS: io.confluent.kafkarest.security.KafkaRestSecurityResourceExtension
      KAFKA_KAFKA_REST_REST_SERVLET_INITIALIZOR_CLASSES: io.confluent.common.security.jetty.initializer.InstallBearerOrBasicSecurityHandler
      KAFKA_KAFKA_REST_PUBLIC_KEY_PATH: /tmp/conf/public.pem
      # EmbeddedKafkaRest: MDS Client configuration
      KAFKA_KAFKA_REST_CONFLUENT_METADATA_BOOTSTRAP_SERVER_URLS: http://broker:8092
      KAFKA_KAFKA_REST_SSL_TRUSTSTORE_LOCATION: /var/private/ssl/kafka.broker.truststore.jks
      KAFKA_KAFKA_REST_SSL_TRUSTSTORE_PASSWORD: confluent
      KAFKA_KAFKA_REST_CONFLUENT_METADATA_HTTP_AUTH_CREDENTIALS_PROVIDER: BASIC
      KAFKA_KAFKA_REST_CONFLUENT_METADATA_BASIC_AUTH_USER_INFO: 'superUser:superUser'
      KAFKA_KAFKA_REST_CONFLUENT_METADATA_SERVER_URLS_MAX_AGE_MS: 60000
      KAFKA_KAFKA_REST_CLIENT_CONFLUENT_METADATA_SERVER_URLS_MAX_AGE_MS: 60000

  control-center:
    image: confluentinc/cp-enterprise-control-center:7.5.6
    hostname: control-center
    container_name: control-center
    restart: always
    depends_on:
      - broker
    ports:
      - "9021:9021"
    volumes:
      - ./security/conf:/tmp/conf
    environment:
      CUB_CLASSPATH: "/usr/share/java/confluent-control-center/*:/usr/share/java/rest-utils/*:/usr/share/java/confluent-common/*:/usr/share/java/confluent-security/kafka-rest/*:/usr/share/java/kafka-rest/:/usr/share/java/cp-base-new/*"

      CONTROL_CENTER_BOOTSTRAP_SERVERS: broker:10091
      CONTROL_CENTER_KAFKA_SECURITY_PROTOCOL: SASL_PLAINTEXT
      CONTROL_CENTER_KAFKA_SECURITY_MECHANISM: OAUTHBEARER
      CONTROL_CENTER_KAFKA_SASL_LOGIN_CALLBACK_HANDLER_CLASS: io.confluent.kafka.clients.plugins.auth.token.TokenUserLoginCallbackHandler
      CONTROL_CENTER_KAFKA_SASL_JAAS_CONFIG: |
        org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required \
        username="controlcenterAdmin" \
        password="controlcenterAdmin" \
        metadataServerUrls="http://broker:8092";

      CONFLUENT_METADATA_BOOTSTRAP_SERVER_URLS: http://broker:8092
      CONFLUENT_METADATA_BASIC_AUTH_USER_INFO: controlcenterAdmin:controlcenterAdmin

      CONTROL_CENTER_STREAMS_SECURITY_PROTOCOL: SASL_PLAINTEXT
      CONTROL_CENTER_REST_AUTHENTICATION_METHOD: BEARER
      PUBLIC_KEY_PATH: /tmp/conf/public.pem

      CONTROL_CENTER_STREAMS_SASL_MECHANISM: OAUTHBEARER
      CONTROL_CENTER_STREAMS_SASL_LOGIN_CALLBACK_HANDLER_CLASS: io.confluent.kafka.clients.plugins.auth.token.TokenUserLoginCallbackHandler
      CONTROL_CENTER_STREAMS_SASL_JAAS_CONFIG:
        org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required \
        username="controlcenterAdmin" \
        password="controlcenterAdmin" \
        metadataServerUrls="http://broker:8092";

      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONFLUENT_MONITORING_INTERCEPTOR_TOPIC_REPLICATION: 1
      CONFLUENT_CONTROLCENTER_INTERNAL_TOPICS_REPLICATION: 1
      CONFLUENT_CONTROLCENTER_COMMAND_TOPIC_REPLICATION: 1
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      CONFLUENT_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1

volumes:
  mi3: {}

networks:
  kafka-minikube-network:
