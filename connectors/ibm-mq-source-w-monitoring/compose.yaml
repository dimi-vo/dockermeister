version: "3"
services:
  controller-1:
    image: confluentinc/cp-kafka:7.6.0
    hostname: controller-1
    container_name: controller-1
    environment:
      KAFKA_PROCESS_ROLES: "controller"
      KAFKA_NODE_ID: 1
      KAFKA_LISTENERS: "CONTROLLER://controller-1:29092"
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@controller-1:29092,2@controller-2:29092,3@controller-3:29092"
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      CLUSTER_ID: "MkU3OEVBNTcwNTJENDM2Qk"
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      EXTRA_ARGS:
        -javaagent:/opt/jmx/jmx_prometheus_javaagent-0.20.0.jar=1234:/usr/share/jmx-exporter/kafka_broker.yml
    ports:
      - '9101:9101'
    volumes:
      - ./metrics/jmx-exporter:/usr/share/jmx-exporter
      - ./jars/jmx:/opt/jmx
    

  controller-2:
    image: confluentinc/cp-kafka:7.6.0
    hostname: controller-2
    container_name: controller-2
    depends_on:
      - controller-1
    ports:
      - "9093:9092"
      - "9102:9101"
    environment:
      KAFKA_PROCESS_ROLES: "controller"
      KAFKA_NODE_ID: 2
      KAFKA_LISTENERS: "CONTROLLER://controller-2:29092"
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@controller-1:29092,2@controller-2:29092,3@controller-3:29092"
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      CLUSTER_ID: "MkU3OEVBNTcwNTJENDM2Qk"
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      EXTRA_ARGS:
        -javaagent:/opt/jmx/jmx_prometheus_javaagent-0.20.0.jar=1234:/usr/share/jmx-exporter/kafka_broker.yml
    volumes:
      - ./metrics/jmx-exporter:/usr/share/jmx-exporter
      - ./jars/jmx:/opt/jmx
  
  controller-3:
    image: confluentinc/cp-kafka:7.6.0
    hostname: controller-3
    container_name: controller-3
    depends_on:
      - controller-1
      - controller-2
    ports:
      - "9094:9092"
      - "9103:9101"
    environment:
      KAFKA_PROCESS_ROLES: "controller"
      KAFKA_NODE_ID: 3
      KAFKA_LISTENERS: "CONTROLLER://controller-3:29092"
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@controller-1:29092,2@controller-2:29092,3@controller-3:29092"
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      CLUSTER_ID: "MkU3OEVBNTcwNTJENDM2Qk"
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      EXTRA_ARGS:
        -javaagent:/opt/jmx/jmx_prometheus_javaagent-0.20.0.jar=1234:/usr/share/jmx-exporter/kafka_broker.yml
    volumes:
      - ./metrics/jmx-exporter:/usr/share/jmx-exporter
      - ./jars/jmx:/opt/jmx

  broker-1:
    image: confluentinc/cp-kafka:7.6.0
    hostname: broker-1
    container_name: broker-1
    depends_on:
      - controller-1
      - controller-2
      - controller-3
    ports:
      - "9095:9092"
      - "9104:9101"
    environment:
      KAFKA_NODE_ID: 4
      KAFKA_PROCESS_ROLES: "broker"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://broker-1:9092,PLAINTEXT_HOST://broker-1:29092" # Required for brokers
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@controller-1:29092,2@controller-2:29092,3@controller-3:29092"
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_LISTENERS: "PLAINTEXT://broker-1:9092,PLAINTEXT_HOST://0.0.0.0:29092"
      KAFKA_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"
      CLUSTER_ID: "MkU3OEVBNTcwNTJENDM2Qk"
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      EXTRA_ARGS:
        -javaagent:/opt/jmx/jmx_prometheus_javaagent-0.20.0.jar=1234:/usr/share/jmx-exporter/kafka_broker.yml
    volumes:
      - ./metrics/jmx-exporter:/usr/share/jmx-exporter
      - ./jars/jmx:/opt/jmx

  broker-2:
    image: confluentinc/cp-kafka:7.6.0
    hostname: broker-2
    depends_on:
      - broker-1
    container_name: broker-2
    ports:
      - "9096:9092"
      - "9105:9101"
    environment:
      KAFKA_NODE_ID: 5
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://broker-2:9092,PLAINTEXT_HOST://broker-2:29092" # Required for brokers
      KAFKA_PROCESS_ROLES: "broker"
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@controller-1:29092,2@controller-2:29092,3@controller-3:29092"
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_LISTENERS: "PLAINTEXT://broker-2:9092,PLAINTEXT_HOST://0.0.0.0:29092"
      KAFKA_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"
      CLUSTER_ID: "MkU3OEVBNTcwNTJENDM2Qk"
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      EXTRA_ARGS:
        -javaagent:/opt/jmx/jmx_prometheus_javaagent-0.20.0.jar=1234:/usr/share/jmx-exporter/kafka_broker.yml
    volumes:
      - ./metrics/jmx-exporter:/usr/share/jmx-exporter
      - ./jars/jmx:/opt/jmx

  broker-3:
    image: confluentinc/cp-kafka:7.6.0
    hostname: broker-3
    depends_on:
      - broker-1
      - broker-2
    container_name: broker-3
    ports:
      - "9097:9092"
      - "9106:9101"
    environment:
      KAFKA_NODE_ID: 6
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://broker-3:9092,PLAINTEXT_HOST://broker-3:29092" # Required for brokers
      KAFKA_PROCESS_ROLES: "broker"
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@controller-1:29092,2@controller-2:29092,3@controller-3:29092"
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_LISTENERS: "PLAINTEXT://broker-3:9092,PLAINTEXT_HOST://0.0.0.0:29092"
      KAFKA_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"
      KAFKA_LOG_DIRS: "/tmp/kraft-combined-logs"
      CLUSTER_ID: "MkU3OEVBNTcwNTJENDM2Qk"
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      EXTRA_ARGS:
        -javaagent:/opt/jmx/jmx_prometheus_javaagent-0.20.0.jar=1234:/usr/share/jmx-exporter/kafka_broker.yml
    volumes:
      - ./metrics/jmx-exporter:/usr/share/jmx-exporter
      - ./jars/jmx:/opt/jmx

  control-center:
    image: confluentinc/cp-enterprise-control-center:7.6.0
    hostname: control-center
    container_name: control-center
    depends_on:
      - broker-1
      - broker-2
      - broker-3
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'broker-1:9092,broker-1:9092,broker-3:9092'
      CONTROL_CENTER_CONNECT_CONNECT-DEFAULT_CLUSTER: 'kafka-connect:8083'
      CONTROL_CENTER_CONNECT_HEALTHCHECK_ENDPOINT: '/connectors'
      CONTROL_CENTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      CONFLUENT_TELEMETRY_ENABLE: false
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      PORT: 9021

  schema-registry:
    image: confluentinc/cp-schema-registry:latest
    container_name: schema-registry
    ports:
      - '8081:8081'
    depends_on:
      - broker-1
      - broker-2
      - broker-3
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'broker-1:9092,broker-1:9092,broker-3:9092'
      SCHEMA_REGISTRY_AVRO_COMPATIBILITY_LEVEL: "none"
      SCHEMA_REGISTRY_LOG4J_ROOT_LOGLEVEL: "WARN"

  kafka-connect:
    image: confluentinc/cp-kafka-connect:latest
    container_name: kafka-connect
    hostname: kafka-connect
    depends_on:
      - broker-1
      - broker-2
      - broker-3
    ports:
      - '8083:8083'
    environment:
      CONNECT_BOOTSTRAP_SERVERS: 'broker-1:9092,broker-2:9092,broker-3:9092'
      CONNECT_REST_ADVERTISED_HOST_NAME: kafka-connect
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_KEY_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'
      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_PLUGIN_PATH: /usr/share/java,/usr/share/confluent-hub-components
      CONNECT_CONNECTOR_CLIENT_CONFIG_OVERRIDE_POLICY: All
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      EXTRA_ARGS:
        -javaagent:/opt/jmx/jmx_prometheus_javaagent-0.20.0.jar=1234:/usr/share/jmx-exporter/kafka_connect.yml
    volumes:
      - ./jars/jmx:/opt/jmx
      - ./metrics/jmx-exporter:/usr/share/jmx-exporter
      - ./jars/connect:/tmp-jars
    command:
      - bash
      - -c
      - |
        confluent-hub install --no-prompt confluentinc/kafka-connect-ibmmq:12.2.4
        cp /tmp-jars/com.ibm.mq.allclient.jar /usr/share/confluent-hub-components/confluentinc-kafka-connect-ibmmq/lib/com.ibm.mq.allclient.jar
        if [ $? -ne 0 ]
        then
          echo "Could not locate the com.ibm.mq.allclient.jar file. Check your folder"
          exit 1
        fi
        /etc/confluent/docker/run &
        sleep infinity

  postgres:
    image: postgres
    external_links:
      - "4dbfb8027190311990e586ebb73040ead2f5981a81831ddf9099ea35bb5a1fb1"
    profiles:
      - connectors
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: postgres

  ibmmq:
    image: e9d575a29799
    profiles:
      - connectors
    environment:
      LICENSE: accept
      MQ_QMGR_NAME: QM1
      MQ_APP_PASSWORD: passw0rd
      MQ_ADMIN_PASSWORD: passw0rd
    volumes:
      - qm1data:/mnt/mqm
    ports:
      - "1414:1414"
      - "9443:9443"
    container_name: ibmmq

  prometheus:
    depends_on:
      - controller-1
      - controller-2
      - controller-3
      - broker-1
      - broker-2
      - broker-3
    image: prom/prometheus
    container_name: prometheus
    ports:
      - '9090:9090'
    volumes:
      - ./metrics/prometheus:/etc/prometheus

  grafana:
    image: grafana/grafana
    container_name: grafana
    depends_on:
      - prometheus
    ports:
      - '3000:3000'
    environment:
      - "GF_SECURITY_ADMIN_USER=admin"
      - "GF_SECURITY_ADMIN_PASSWORD=password"
      - "GF_USERS_ALLOW_SIGN_UP=false"
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning

volumes:
  qm1data:
